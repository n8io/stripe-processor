html
    link(rel='stylesheet', href='//fonts.googleapis.com/css?family=Open+Sans', id='css-google-fonts')
    link(rel='stylesheet', href='//cdnjs.cloudflare.com/ajax/libs/fullPage.js/2.7.7/jquery.fullPage.min.js', id='css-fullpage')
    meta(name='viewport' content='width=device-width, initial-scale=1')
    style.
      body {
        margin: 0;
        padding: 0;
        opacity: 0;
        transition: opacity 0.5s ease
      }

      body.resolved {
        opacity: 1;
      }

      .section {
        background: #fff no-repeat;
        background-size: cover;
      }

      .fp-tableCell {
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .payment {
        max-width: 60%;
        transition: 1s;
        -webkit-transition: 1s;
        font-family: Open Sans;
        font-size: 2em;
        text-align: center;
        padding: 20px;
        border-radius: 10px;
        border: 1px solid transparent;
        background-color: rgba(255,255,255,.7);
      }
      .payment a { display: none; }

      @media (max-width: 480px) {
        .payment {
          background-color: transparent;
        }
        .payment div { display: none; }
        .payment a {
          display: block;
          font-size: 28px;
          background-color: #fff;
          text-decoration: none;
          padding: 10px;
          border: 1px solid rgba(0,0,0,.5);
          border-radius: 5px;
          color: #555;
        }
        .payment a:hover {
          background-color: rgba(255,255,255,.6)
        }
      }
      .payment.success {
        color: #fff;
        background-color: #4CAF50;
      }
      .payment.failure {
        color: #fff;
        background-color: #F44336;
      }
  body
    #fullpage
      .section
        .payment
          div Processing...
          a(href='javascript://',onclick='openPayment()') Start Payment
    script(src='//cdnjs.cloudflare.com/ajax/libs/URI.js/1.17.0/URI.min.js', id='js-URI')
    script(src='//ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js', id='js-jquery')
    script(src='//cdnjs.cloudflare.com/ajax/libs/fullPage.js/2.7.7/jquery.fullPage.min.js', id='js-fullpage')
    script(src='//cdnjs.cloudflare.com/ajax/libs/lodash.js/4.5.0/lodash.min.js', id='js-lodash')
    script(src='//checkout.stripe.com/checkout.js', id='js-stripe')
    script.
        var $msg = $('.payment');
        var uri = new URI(window.location);
        var config;

        $(function() {
          $('#fullpage').fullpage();

          $.getJSON('/config', function(data) {
            config = data;

            parseDetails();

            $('body').addClass('resolved');

            if ($(window).width() > 480) {
              openPayment();
            }
          });
        });

        function openPayment() {
          log('Opening');

          var details = parseDetails();

          var handler = StripeCheckout.configure({
            key: '#{process.env.STRIPE_PUBLIC_KEY}',
            image: details.iconImageUrl,
            locale: 'auto',
            token: onToken,
            closed: onClosed
          });

          // Open Checkout with further options
          handler.open({
            name: details.name, //'The League of Extraordinary Idiots',
            description: details.description, // '2015 Entry & Keeper Fees',
            amount: details.amount,
            email: details.email,
            panelLabel: details.label,
            zipCode: details.zipCode
          });
        }

        function onToken(token) {
          log(token.id)

          processPayment(token);

          return;
        }

        function onClosed() {
          if(!window.submitted && $(window).width() > 480) {
            openPayment();
          }
        }

        function processPayment(token) {
          log('Processing payment');

          var data = parseDetails();
          data.token = token.id;
          data.email = token.email;

          window.submitted = true;

          $.ajax({
            type: 'POST',
            url: '/api/stripe/payment',
            data: data,
            success: onSuccess,
            error: onError,
            dataType: 'json'
          });
        }

        function onSuccess() {
          var qs = parseDetails();

          $msg
            .addClass('success')
            .html('Thanks. Check your email for a receipt.');

          if(qs.redirectUrl) {
            setTimeout(function() {
              window.location = qs.redirectUrl;
            }, 3000);
          }
        }

        function onError() {
          $msg
            .addClass('failure')
            .html('There was an error.');
        }

        function log(msg) {
          console.log(msg);
        }

        function parseDetails() {
          var qs = uri.search(true);
          var hexReg = /(^[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]$)|(^[0-9a-f][0-9a-f][0-9a-f]$)/ig;

          var data = {
            email: qs.e || null,
            amount: parseInt(qs.a, 10) || 0,
            description: qs.d || null,
            name: qs.n || null,
            label: qs.t || null,
            redirectUrl: qs.r || null,
            iconImageUrl: qs.i || null,
            offset: !!qs.o && ['0', 'false'].indexOf(qs.o) === -1,
            background: qs.b,
            zipCode: !!qs.z && ['0', 'false'].indexOf(qs.z) === -1,
          };

          var metadata = _(qs)
            .keys()
            .filter(function(k) {
              return k.indexOf('m_') === 0;
            })
            .map(function(k) {
              var kvp = {};

              kvp[k.replace('m_', '')] = qs[k];

              return kvp;
            })
            .value()
            ;

          if (metadata.length) {
            // We have metadata to add
            data.metadata = metadata;
          }

          if (qs.f || qs.l) {
            data.customer = {
              firstName: qs.f || null,
              lastName: qs.l || null
            };
          }

          if (data.offset) { // Do the math to add the service fee to the final amount
            var flatFee = config.serviceFlatFee * 100;
            data.amount = parseInt(parseFloat(data.amount * (1 + (config.serviceRatePercent / 100))).toFixed(0)) + flatFee;

            if (data.amount < 3000) {
              data.amount += 1;
            }
          }

          if (data.background) {
            var isHexColor = hexReg.test(data.background);

            if (isHexColor) {
              $('.section').css({'background-color': data.background})
            }
            else {
              $('.section')
                .css({'background': 'url("' + data.background + '") no-repeat'})
                .css({'background-size': 'cover'})
                ;
            }
          }

          var $head = $('head');
          var title = '';
          var faviconHref = data.iconImageUrl || 'https://stripe.com/favicon.ico';

          if (!$head.find('title').length) {
            if (data.name && data.description) {
              title = data.name + ' :: ' + data.description;
            }
            else if (data.name) {
              title = data.name;
            }
            else {
              title = 'Stripe Payment';
            }

            $head.append('<title>' + title + '</title>');
            $head.append('<link href="' + faviconHref + '" rel="shortcut icon" />');
          }

          return data;
        }
